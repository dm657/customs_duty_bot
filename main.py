# Press Double Shift to search everywhere for classes, files, tool windows, actions, and settings.
import magic_filter

from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command #, Text

from aiogram.types import Message
from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, inline_keyboard_markup
from aiogram import F

from bot_token import TOKEN
from data import STAVKI, RANGES
from get_exchange_rate import get_exchange_rate

bot = Bot(token=TOKEN)
dp = Dispatcher()

button_start: KeyboardButton = KeyboardButton(text="/start")
button_help: KeyboardButton = KeyboardButton(text="/help")
kb1: ReplyKeyboardMarkup = ReplyKeyboardMarkup(
    keyboard=[[button_start, button_help]], resize_keyboard=True)

# button_1: KeyboardButton = KeyboardButton(text='–∫–∏–Ω—É—Ç—å üé≤')
# button_2: KeyboardButton = KeyboardButton(text='–°–æ–±–∞–∫–µ–Ω—ã')
#
# # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –¥–æ–±–∞–≤–ª—è—è –≤ –Ω–µ–≥–æ –∫–Ω–æ–ø–∫–∏
# kb1: ReplyKeyboardMarkup = ReplyKeyboardMarkup(
#     keyboard=[[button_1, button_2]], resize_keyboard=True)


@dp.message(Command(commands=["start"]))
async def process_start_command(message: Message):
    await message.answer('–ü—Ä–∏–≤–µ—Ç!\n–Ø –º–æ–≥—É –ø–æ—Å—á–∏—Ç–∞—Ç—å –ø–æ—à–ª–∏–Ω—É –Ω–∞ –∞–≤—Ç–æ!\n–ù–∞–ø–∏—à–∏ –æ–±—ä–µ–º –¥–≤–∏–≥–∞—Ç–µ–ª—è –º–∞—à–∏–Ω—ã', reply_markup=kb1)


@dp.message(Command(commands=["help"]))
async def process_start_command(message: Message):
    await message.answer('–ü–æ–∫–∞ –º–æ–≥—É –ø–æ—Å—á–∏—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –¥–ª—è –∞/–º —Å –î–í–° –æ—Ç 3 –¥–æ 5 –ª–µ—Ç', reply_markup=kb1)


@dp.message(F.voice)
async def send_echo(message: Message):
    await message.reply(text='–≤–æ–π—Å–æ–ª–µ–¥–∏')


# @dp.message(lambda x: x.text and '123' in x.text or (x.text and x.text.isdigit() and 1 <= int(x.text) <= 100))
@dp.message(F.text)
async def calculate(message: Message):
    try:
        v = int(message.text)
        stavka = STAVKI[sum(map(lambda x: v <= x, RANGES))]
        euro = round(v * stavka, 2)
        rub = round(euro * get_exchange_rate())
        if rub:
            await message.reply(text=f"–ü–æ—à–ª–∏–Ω–∞ —Å–æ—Å—Ç–∞–≤–∏—Ç {euro} ‚Ç¨\n—á—Ç–æ –ø–æ —Ç–µ–∫—É—â–µ–º—É –∫—É—Ä—Å—É {rub} ‚ÇΩ")
        else:
            await message.reply(text=f"–ü–æ—à–ª–∏–Ω–∞ —Å–æ—Å—Ç–∞–≤–∏—Ç {euro} ‚Ç¨\n–Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å ‚Ç¨\n–¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –≤ ‚ÇΩ")
    except ValueError:
        await message.reply("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")


@dp.message(F.text)
async def send_echo(message: Message):
    await message.reply(text=message.text)


if __name__ == '__main__':
    dp.run_polling(bot)
